/*
* generated by Xtext
*/
grammar InternalAssess;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uws.engage.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uws.engage.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uws.engage.dsl.services.AssessGrammarAccess;

}

@parser::members {
 
 	private AssessGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AssessGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnd
entryRuleEnd 
:
{ before(grammarAccess.getEndRule()); }
	 ruleEnd
{ after(grammarAccess.getEndRule()); } 
	 EOF 
;

// Rule End
ruleEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndAccess().getEndKeyword()); }

	'End' 

{ after(grammarAccess.getEndAccess().getEndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelimitator
entryRuleDelimitator 
:
{ before(grammarAccess.getDelimitatorRule()); }
	 ruleDelimitator
{ after(grammarAccess.getDelimitatorRule()); } 
	 EOF 
;

// Rule Delimitator
ruleDelimitator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelimitatorAccess().getSemicolonKeyword()); }

	';' 

{ after(grammarAccess.getDelimitatorAccess().getSemicolonKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSeparator
entryRuleSeparator 
:
{ before(grammarAccess.getSeparatorRule()); }
	 ruleSeparator
{ after(grammarAccess.getSeparatorRule()); } 
	 EOF 
;

// Rule Separator
ruleSeparator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSeparatorAccess().getColonKeyword()); }

	':' 

{ after(grammarAccess.getSeparatorAccess().getColonKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGameDescription
entryRuleGameDescription 
:
{ before(grammarAccess.getGameDescriptionRule()); }
	 ruleGameDescription
{ after(grammarAccess.getGameDescriptionRule()); } 
	 EOF 
;

// Rule GameDescription
ruleGameDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup()); }
(rule__GameDescription__Group__0)
{ after(grammarAccess.getGameDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAge
entryRuleAge 
:
{ before(grammarAccess.getAgeRule()); }
	 ruleAge
{ after(grammarAccess.getAgeRule()); } 
	 EOF 
;

// Rule Age
ruleAge
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAgeAccess().getGroup()); }
(rule__Age__Group__0)
{ after(grammarAccess.getAgeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlayerDescription
entryRulePlayerDescription 
:
{ before(grammarAccess.getPlayerDescriptionRule()); }
	 rulePlayerDescription
{ after(grammarAccess.getPlayerDescriptionRule()); } 
	 EOF 
;

// Rule PlayerDescription
rulePlayerDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlayerDescriptionAccess().getGroup()); }
(rule__PlayerDescription__Group__0)
{ after(grammarAccess.getPlayerDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharacteristic
entryRuleCharacteristic 
:
{ before(grammarAccess.getCharacteristicRule()); }
	 ruleCharacteristic
{ after(grammarAccess.getCharacteristicRule()); } 
	 EOF 
;

// Rule Characteristic
ruleCharacteristic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharacteristicAccess().getGroup()); }
(rule__Characteristic__Group__0)
{ after(grammarAccess.getCharacteristicAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLearningOutcomes
entryRuleLearningOutcomes 
:
{ before(grammarAccess.getLearningOutcomesRule()); }
	 ruleLearningOutcomes
{ after(grammarAccess.getLearningOutcomesRule()); } 
	 EOF 
;

// Rule LearningOutcomes
ruleLearningOutcomes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLearningOutcomesAccess().getGroup()); }
(rule__LearningOutcomes__Group__0)
{ after(grammarAccess.getLearningOutcomesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutcome
entryRuleOutcome 
:
{ before(grammarAccess.getOutcomeRule()); }
	 ruleOutcome
{ after(grammarAccess.getOutcomeRule()); } 
	 EOF 
;

// Rule Outcome
ruleOutcome
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutcomeAccess().getGroup()); }
(rule__Outcome__Group__0)
{ after(grammarAccess.getOutcomeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeOutcome
entryRuleTypeOutcome 
:
{ before(grammarAccess.getTypeOutcomeRule()); }
	 ruleTypeOutcome
{ after(grammarAccess.getTypeOutcomeRule()); } 
	 EOF 
;

// Rule TypeOutcome
ruleTypeOutcome
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeOutcomeAccess().getAlternatives()); }
(rule__TypeOutcome__Alternatives)
{ after(grammarAccess.getTypeOutcomeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedbackMessages
entryRuleFeedbackMessages 
:
{ before(grammarAccess.getFeedbackMessagesRule()); }
	 ruleFeedbackMessages
{ after(grammarAccess.getFeedbackMessagesRule()); } 
	 EOF 
;

// Rule FeedbackMessages
ruleFeedbackMessages
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackMessagesAccess().getGroup()); }
(rule__FeedbackMessages__Group__0)
{ after(grammarAccess.getFeedbackMessagesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedback
entryRuleFeedback 
:
{ before(grammarAccess.getFeedbackRule()); }
	 ruleFeedback
{ after(grammarAccess.getFeedbackRule()); } 
	 EOF 
;

// Rule Feedback
ruleFeedback
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackAccess().getGroup()); }
(rule__Feedback__Group__0)
{ after(grammarAccess.getFeedbackAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeFeedback
entryRuleTypeFeedback 
:
{ before(grammarAccess.getTypeFeedbackRule()); }
	 ruleTypeFeedback
{ after(grammarAccess.getTypeFeedbackRule()); } 
	 EOF 
;

// Rule TypeFeedback
ruleTypeFeedback
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeFeedbackAccess().getAlternatives()); }
(rule__TypeFeedback__Alternatives)
{ after(grammarAccess.getTypeFeedbackAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvidenceModel
entryRuleEvidenceModel 
:
{ before(grammarAccess.getEvidenceModelRule()); }
	 ruleEvidenceModel
{ after(grammarAccess.getEvidenceModelRule()); } 
	 EOF 
;

// Rule EvidenceModel
ruleEvidenceModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEvidenceModelAccess().getGroup()); }
(rule__EvidenceModel__Group__0)
{ after(grammarAccess.getEvidenceModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionSequences
entryRuleActionSequences 
:
{ before(grammarAccess.getActionSequencesRule()); }
	 ruleActionSequences
{ after(grammarAccess.getActionSequencesRule()); } 
	 EOF 
;

// Rule ActionSequences
ruleActionSequences
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionSequencesAccess().getGroup()); }
(rule__ActionSequences__Group__0)
{ after(grammarAccess.getActionSequencesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionSequence
entryRuleActionSequence 
:
{ before(grammarAccess.getActionSequenceRule()); }
	 ruleActionSequence
{ after(grammarAccess.getActionSequenceRule()); } 
	 EOF 
;

// Rule ActionSequence
ruleActionSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionSequenceAccess().getGroup()); }
(rule__ActionSequence__Group__0)
{ after(grammarAccess.getActionSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimerActions
entryRuleTimerActions 
:
{ before(grammarAccess.getTimerActionsRule()); }
	 ruleTimerActions
{ after(grammarAccess.getTimerActionsRule()); } 
	 EOF 
;

// Rule TimerActions
ruleTimerActions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimerActionsAccess().getGroup()); }
(rule__TimerActions__Group__0)
{ after(grammarAccess.getTimerActionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimerAction
entryRuleTimerAction 
:
{ before(grammarAccess.getTimerActionRule()); }
	 ruleTimerAction
{ after(grammarAccess.getTimerActionRule()); } 
	 EOF 
;

// Rule TimerAction
ruleTimerAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimerActionAccess().getGroup()); }
(rule__TimerAction__Group__0)
{ after(grammarAccess.getTimerActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTiming
entryRuleTiming 
:
{ before(grammarAccess.getTimingRule()); }
	 ruleTiming
{ after(grammarAccess.getTimingRule()); } 
	 EOF 
;

// Rule Timing
ruleTiming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimingAccess().getGroup()); }
(rule__Timing__Group__0)
{ after(grammarAccess.getTimingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionReaction
entryRuleActionReaction 
:
{ before(grammarAccess.getActionReactionRule()); }
	 ruleActionReaction
{ after(grammarAccess.getActionReactionRule()); } 
	 EOF 
;

// Rule ActionReaction
ruleActionReaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionReactionAccess().getAlternatives()); }
(rule__ActionReaction__Alternatives)
{ after(grammarAccess.getActionReactionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdateScore
entryRuleUpdateScore 
:
{ before(grammarAccess.getUpdateScoreRule()); }
	 ruleUpdateScore
{ after(grammarAccess.getUpdateScoreRule()); } 
	 EOF 
;

// Rule UpdateScore
ruleUpdateScore
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateScoreAccess().getGroup()); }
(rule__UpdateScore__Group__0)
{ after(grammarAccess.getUpdateScoreAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggerFeedback
entryRuleTriggerFeedback 
:
{ before(grammarAccess.getTriggerFeedbackRule()); }
	 ruleTriggerFeedback
{ after(grammarAccess.getTriggerFeedbackRule()); } 
	 EOF 
;

// Rule TriggerFeedback
ruleTriggerFeedback
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerFeedbackAccess().getGroup()); }
(rule__TriggerFeedback__Group__0)
{ after(grammarAccess.getTriggerFeedbackAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePoints
entryRulePoints 
:
{ before(grammarAccess.getPointsRule()); }
	 rulePoints
{ after(grammarAccess.getPointsRule()); } 
	 EOF 
;

// Rule Points
rulePoints
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointsAccess().getGroup()); }
(rule__Points__Group__0)
{ after(grammarAccess.getPointsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePoint
entryRulePoint 
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointAccess().getGroup()); }
(rule__Point__Group__0)
{ after(grammarAccess.getPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSign
entryRuleSign 
:
{ before(grammarAccess.getSignRule()); }
	 ruleSign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule Sign
ruleSign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignAccess().getAlternatives()); }
(rule__Sign__Alternatives)
{ after(grammarAccess.getSignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParams
entryRuleParams 
:
{ before(grammarAccess.getParamsRule()); }
	 ruleParams
{ after(grammarAccess.getParamsRule()); } 
	 EOF 
;

// Rule Params
ruleParams
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamsAccess().getGroup()); }
(rule__Params__Group__0)
{ after(grammarAccess.getParamsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getAlternatives()); }
(rule__Param__Alternatives)
{ after(grammarAccess.getParamAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFLOAT
entryRuleFLOAT 
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFLOATAccess().getGroup()); }
(rule__FLOAT__Group__0)
{ after(grammarAccess.getFLOATAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOL
entryRuleBOOL 
:
{ before(grammarAccess.getBOOLRule()); }
	 ruleBOOL
{ after(grammarAccess.getBOOLRule()); } 
	 EOF 
;

// Rule BOOL
ruleBOOL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLAccess().getAlternatives()); }
(rule__BOOL__Alternatives)
{ after(grammarAccess.getBOOLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReactions
entryRuleReactions 
:
{ before(grammarAccess.getReactionsRule()); }
	 ruleReactions
{ after(grammarAccess.getReactionsRule()); } 
	 EOF 
;

// Rule Reactions
ruleReactions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReactionsAccess().getGroup()); }
(rule__Reactions__Group__0)
{ after(grammarAccess.getReactionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReaction
entryRuleReaction 
:
{ before(grammarAccess.getReactionRule()); }
	 ruleReaction
{ after(grammarAccess.getReactionRule()); } 
	 EOF 
;

// Rule Reaction
ruleReaction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReactionAccess().getAlternatives()); }
(rule__Reaction__Alternatives)
{ after(grammarAccess.getReactionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamCondition
entryRuleParamCondition 
:
{ before(grammarAccess.getParamConditionRule()); }
	 ruleParamCondition
{ after(grammarAccess.getParamConditionRule()); } 
	 EOF 
;

// Rule ParamCondition
ruleParamCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamConditionAccess().getParamsAssignment()); }
(rule__ParamCondition__ParamsAssignment)
{ after(grammarAccess.getParamConditionAccess().getParamsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointsCondition
entryRulePointsCondition 
:
{ before(grammarAccess.getPointsConditionRule()); }
	 rulePointsCondition
{ after(grammarAccess.getPointsConditionRule()); } 
	 EOF 
;

// Rule PointsCondition
rulePointsCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointsConditionAccess().getGroup()); }
(rule__PointsCondition__Group__0)
{ after(grammarAccess.getPointsConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePointsKeyWd
entryRulePointsKeyWd 
:
{ before(grammarAccess.getPointsKeyWdRule()); }
	 rulePointsKeyWd
{ after(grammarAccess.getPointsKeyWdRule()); } 
	 EOF 
;

// Rule PointsKeyWd
rulePointsKeyWd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPointsKeyWdAccess().getAlternatives()); }
(rule__PointsKeyWd__Alternatives)
{ after(grammarAccess.getPointsKeyWdAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedbackModel
entryRuleFeedbackModel 
:
{ before(grammarAccess.getFeedbackModelRule()); }
	 ruleFeedbackModel
{ after(grammarAccess.getFeedbackModelRule()); } 
	 EOF 
;

// Rule FeedbackModel
ruleFeedbackModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackModelAccess().getGroup()); }
(rule__FeedbackModel__Group__0)
{ after(grammarAccess.getFeedbackModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrigger
entryRuleTrigger 
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerAccess().getAlternatives()); }
(rule__Trigger__Alternatives)
{ after(grammarAccess.getTriggerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutcomeValueLimit
entryRuleOutcomeValueLimit 
:
{ before(grammarAccess.getOutcomeValueLimitRule()); }
	 ruleOutcomeValueLimit
{ after(grammarAccess.getOutcomeValueLimitRule()); } 
	 EOF 
;

// Rule OutcomeValueLimit
ruleOutcomeValueLimit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getGroup()); }
(rule__OutcomeValueLimit__Group__0)
{ after(grammarAccess.getOutcomeValueLimitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompSign
entryRuleCompSign 
:
{ before(grammarAccess.getCompSignRule()); }
	 ruleCompSign
{ after(grammarAccess.getCompSignRule()); } 
	 EOF 
;

// Rule CompSign
ruleCompSign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompSignAccess().getAlternatives()); }
(rule__CompSign__Alternatives)
{ after(grammarAccess.getCompSignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInactivityLimit
entryRuleInactivityLimit 
:
{ before(grammarAccess.getInactivityLimitRule()); }
	 ruleInactivityLimit
{ after(grammarAccess.getInactivityLimitRule()); } 
	 EOF 
;

// Rule InactivityLimit
ruleInactivityLimit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInactivityLimitAccess().getGroup()); }
(rule__InactivityLimit__Group__0)
{ after(grammarAccess.getInactivityLimitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpleTypeAssignment_0()); }
(rule__Type__SimpleTypeAssignment_0)
{ after(grammarAccess.getTypeAccess().getSimpleTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getEnumTypeAssignment_1()); }
(rule__Type__EnumTypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getEnumTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpleTypeAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpleTypeIntKeyword_0_0_0()); }

	'Int' 

{ after(grammarAccess.getTypeAccess().getSimpleTypeIntKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimpleTypeFloatKeyword_0_0_1()); }

	'Float' 

{ after(grammarAccess.getTypeAccess().getSimpleTypeFloatKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimpleTypeStringKeyword_0_0_2()); }

	'String' 

{ after(grammarAccess.getTypeAccess().getSimpleTypeStringKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimpleTypeBoolKeyword_0_0_3()); }

	'Bool' 

{ after(grammarAccess.getTypeAccess().getSimpleTypeBoolKeyword_0_0_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimpleTypeCharKeyword_0_0_4()); }

	'Char' 

{ after(grammarAccess.getTypeAccess().getSimpleTypeCharKeyword_0_0_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getSimpleTypeTextKeyword_0_0_5()); }

	'Text' 

{ after(grammarAccess.getTypeAccess().getSimpleTypeTextKeyword_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOutcome__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeOutcomeAccess().getKnowledgeAssignment_0()); }
(rule__TypeOutcome__KnowledgeAssignment_0)
{ after(grammarAccess.getTypeOutcomeAccess().getKnowledgeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeOutcomeAccess().getSkillAssignment_1()); }
(rule__TypeOutcome__SkillAssignment_1)
{ after(grammarAccess.getTypeOutcomeAccess().getSkillAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeOutcomeAccess().getCompetenceAssignment_2()); }
(rule__TypeOutcome__CompetenceAssignment_2)
{ after(grammarAccess.getTypeOutcomeAccess().getCompetenceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFeedback__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFeedbackAccess().getPositiveKeyword_0()); }

	'positive' 

{ after(grammarAccess.getTypeFeedbackAccess().getPositiveKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeFeedbackAccess().getNegativeKeyword_1()); }

	'negative' 

{ after(grammarAccess.getTypeFeedbackAccess().getNegativeKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeFeedbackAccess().getNeutralKeyword_2()); }

	'neutral' 

{ after(grammarAccess.getTypeFeedbackAccess().getNeutralKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeFeedbackAccess().getBadgeKeyword_3()); }

	'badge' 

{ after(grammarAccess.getTypeFeedbackAccess().getBadgeKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypeFeedbackAccess().getHintKeyword_4()); }

	'hint' 

{ after(grammarAccess.getTypeFeedbackAccess().getHintKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getBeforeAssignment_1_0()); }
(rule__ActionSequence__BeforeAssignment_1_0)
{ after(grammarAccess.getActionSequenceAccess().getBeforeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getActionSequenceAccess().getAfterAssignment_1_1()); }
(rule__ActionSequence__AfterAssignment_1_1)
{ after(grammarAccess.getActionSequenceAccess().getAfterAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getBeforeAssignment_0_0()); }
(rule__Timing__BeforeAssignment_0_0)
{ after(grammarAccess.getTimingAccess().getBeforeAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getTimingAccess().getAfterAssignment_0_1()); }
(rule__Timing__AfterAssignment_0_1)
{ after(grammarAccess.getTimingAccess().getAfterAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionReaction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionReactionAccess().getUpdateScoreAssignment_0()); }
(rule__ActionReaction__UpdateScoreAssignment_0)
{ after(grammarAccess.getActionReactionAccess().getUpdateScoreAssignment_0()); }
)

    |(
{ before(grammarAccess.getActionReactionAccess().getTriggerFeedbackAssignment_1()); }
(rule__ActionReaction__TriggerFeedbackAssignment_1)
{ after(grammarAccess.getActionReactionAccess().getTriggerFeedbackAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getOthersAssignment_3_0()); }
(rule__Points__OthersAssignment_3_0)
{ after(grammarAccess.getPointsAccess().getOthersAssignment_3_0()); }
)

    |(
(
{ before(grammarAccess.getPointsAccess().getParamsAssignment_3_1()); }
(rule__Points__ParamsAssignment_3_1)
{ after(grammarAccess.getPointsAccess().getParamsAssignment_3_1()); }
)
(
{ before(grammarAccess.getPointsAccess().getParamsAssignment_3_1()); }
(rule__Points__ParamsAssignment_3_1)*
{ after(grammarAccess.getPointsAccess().getParamsAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__OthersAlternatives_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getOthersOthersKeyword_3_0_0_0()); }

	'others' 

{ after(grammarAccess.getPointsAccess().getOthersOthersKeyword_3_0_0_0()); }
)

    |(
{ before(grammarAccess.getPointsAccess().getOthersElseKeyword_3_0_0_1()); }

	'else' 

{ after(grammarAccess.getPointsAccess().getOthersElseKeyword_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getParamAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParamAccess().getFLOATParserRuleCall_1()); }
	ruleFLOAT
{ after(grammarAccess.getParamAccess().getFLOATParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParamAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getParamAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getParamAccess().getBOOLParserRuleCall_3()); }
	ruleBOOL
{ after(grammarAccess.getParamAccess().getBOOLParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getParamAccess().getIDTerminalRuleCall_4()); }
	RULE_ID
{ after(grammarAccess.getParamAccess().getIDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBOOLAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBOOLAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getParamsCAssignment_0()); }
(rule__Reaction__ParamsCAssignment_0)
{ after(grammarAccess.getReactionAccess().getParamsCAssignment_0()); }
)

    |(
{ before(grammarAccess.getReactionAccess().getGroup_1()); }
(rule__Reaction__Group_1__0)
{ after(grammarAccess.getReactionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getSignAssignment_2_0()); }
(rule__PointsCondition__SignAssignment_2_0)
{ after(grammarAccess.getPointsConditionAccess().getSignAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getPointsConditionAccess().getValueAssignment_2_1()); }
(rule__PointsCondition__ValueAssignment_2_1)
{ after(grammarAccess.getPointsConditionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointsKeyWd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsKeyWdAccess().getAnyKeyword_0()); }

	'any' 

{ after(grammarAccess.getPointsKeyWdAccess().getAnyKeyword_0()); }
)

    |(
{ before(grammarAccess.getPointsKeyWdAccess().getAllKeyword_1()); }

	'all' 

{ after(grammarAccess.getPointsKeyWdAccess().getAllKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getPerfAssignment_0()); }
(rule__Trigger__PerfAssignment_0)
{ after(grammarAccess.getTriggerAccess().getPerfAssignment_0()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getInactivityAssignment_1()); }
(rule__Trigger__InactivityAssignment_1)
{ after(grammarAccess.getTriggerAccess().getInactivityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompSign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompSignAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getCompSignAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getCompSignAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getCompSignAccess().getGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGameAssignment_0()); }
(rule__Model__GameAssignment_0)
{ after(grammarAccess.getModelAccess().getGameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlayerAssignment_1()); }
(rule__Model__PlayerAssignment_1)?
{ after(grammarAccess.getModelAccess().getPlayerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLearningOutcomesAssignment_2()); }
(rule__Model__LearningOutcomesAssignment_2)
{ after(grammarAccess.getModelAccess().getLearningOutcomesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFeedbackMessagesAssignment_3()); }
(rule__Model__FeedbackMessagesAssignment_3)?
{ after(grammarAccess.getModelAccess().getFeedbackMessagesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEvidenceModelAssignment_4()); }
(rule__Model__EvidenceModelAssignment_4)
{ after(grammarAccess.getModelAccess().getEvidenceModelAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFeedbackModelAssignment_5()); }
(rule__Model__FeedbackModelAssignment_5)?
{ after(grammarAccess.getModelAccess().getFeedbackModelAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'Enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getEnumAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumValuesAssignment_2()); }
(rule__Enum__EnumValuesAssignment_2)
{ after(grammarAccess.getEnumAccess().getEnumValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_3()); }
(rule__Enum__Group_3__0)*
{ after(grammarAccess.getEnumAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getEnumAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Enum__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_3__0__Impl
	rule__Enum__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumValuesAssignment_3_1()); }
(rule__Enum__EnumValuesAssignment_3_1)
{ after(grammarAccess.getEnumAccess().getEnumValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GameDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__0__Impl
	rule__GameDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeriousGameKeyword_0()); }

	'Serious-game' 

{ after(grammarAccess.getGameDescriptionAccess().getSeriousGameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__1__Impl
	rule__GameDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGnameKeyword_1()); }

	'SGname' 

{ after(grammarAccess.getGameDescriptionAccess().getSGnameKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__2__Impl
	rule__GameDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_2()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__3__Impl
	rule__GameDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getNameAssignment_3()); }
(rule__GameDescription__NameAssignment_3)
{ after(grammarAccess.getGameDescriptionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__4__Impl
	rule__GameDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGdeveloperKeyword_4()); }

	'SGdeveloper' 

{ after(grammarAccess.getGameDescriptionAccess().getSGdeveloperKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__5__Impl
	rule__GameDescription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_5()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__6__Impl
	rule__GameDescription__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getDevAssignment_6()); }
(rule__GameDescription__DevAssignment_6)
{ after(grammarAccess.getGameDescriptionAccess().getDevAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__7__Impl
	rule__GameDescription__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_7()); }
(rule__GameDescription__Group_7__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__8__Impl
	rule__GameDescription__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_8()); }
(rule__GameDescription__Group_8__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__9__Impl
	rule__GameDescription__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_9()); }
(rule__GameDescription__Group_9__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__10__Impl
	rule__GameDescription__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_10()); }
(rule__GameDescription__Group_10__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__11__Impl
	rule__GameDescription__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_11()); }
(rule__GameDescription__Group_11__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__12__Impl
	rule__GameDescription__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_12()); }
(rule__GameDescription__Group_12__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__13__Impl
	rule__GameDescription__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGroup_13()); }
(rule__GameDescription__Group_13__0)?
{ after(grammarAccess.getGameDescriptionAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getEndParserRuleCall_14()); }
	ruleEnd
{ after(grammarAccess.getGameDescriptionAccess().getEndParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}
































rule__GameDescription__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_7__0__Impl
	rule__GameDescription__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGdescKeyword_7_0()); }

	'SGdesc' 

{ after(grammarAccess.getGameDescriptionAccess().getSGdescKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_7__1__Impl
	rule__GameDescription__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_7_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getDescAssignment_7_2()); }
(rule__GameDescription__DescAssignment_7_2)
{ after(grammarAccess.getGameDescriptionAccess().getDescAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GameDescription__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_8__0__Impl
	rule__GameDescription__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGageRangeKeyword_8_0()); }

	'SGageRange' 

{ after(grammarAccess.getGameDescriptionAccess().getSGageRangeKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_8__1__Impl
	rule__GameDescription__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_8_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getAgeRangeAssignment_8_2()); }
(rule__GameDescription__AgeRangeAssignment_8_2)
{ after(grammarAccess.getGameDescriptionAccess().getAgeRangeAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GameDescription__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_9__0__Impl
	rule__GameDescription__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGlanguageKeyword_9_0()); }

	'SGlanguage' 

{ after(grammarAccess.getGameDescriptionAccess().getSGlanguageKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_9__1__Impl
	rule__GameDescription__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_9_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getLangAssignment_9_2()); }
(rule__GameDescription__LangAssignment_9_2)
{ after(grammarAccess.getGameDescriptionAccess().getLangAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GameDescription__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_10__0__Impl
	rule__GameDescription__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGcountryKeyword_10_0()); }

	'SGcountry' 

{ after(grammarAccess.getGameDescriptionAccess().getSGcountryKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_10__1__Impl
	rule__GameDescription__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_10_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getCountryAssignment_10_2()); }
(rule__GameDescription__CountryAssignment_10_2)
{ after(grammarAccess.getGameDescriptionAccess().getCountryAssignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GameDescription__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_11__0__Impl
	rule__GameDescription__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGgenreKeyword_11_0()); }

	'SGgenre' 

{ after(grammarAccess.getGameDescriptionAccess().getSGgenreKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_11__1__Impl
	rule__GameDescription__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_11_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGenreAssignment_11_2()); }
(rule__GameDescription__GenreAssignment_11_2)
{ after(grammarAccess.getGameDescriptionAccess().getGenreAssignment_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GameDescription__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_12__0__Impl
	rule__GameDescription__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGsubjectKeyword_12_0()); }

	'SGsubject' 

{ after(grammarAccess.getGameDescriptionAccess().getSGsubjectKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_12__1__Impl
	rule__GameDescription__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_12_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSubjectAssignment_12_2()); }
(rule__GameDescription__SubjectAssignment_12_2)
{ after(grammarAccess.getGameDescriptionAccess().getSubjectAssignment_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GameDescription__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_13__0__Impl
	rule__GameDescription__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSGpublicKeyword_13_0()); }

	'SGpublic' 

{ after(grammarAccess.getGameDescriptionAccess().getSGpublicKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_13__1__Impl
	rule__GameDescription__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_13_1()); }
	ruleSeparator
{ after(grammarAccess.getGameDescriptionAccess().getSeparatorParserRuleCall_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GameDescription__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GameDescription__Group_13__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getPublicAssignment_13_2()); }
(rule__GameDescription__PublicAssignment_13_2)
{ after(grammarAccess.getGameDescriptionAccess().getPublicAssignment_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Age__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Age__Group__0__Impl
	rule__Age__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Age__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgeAccess().getAgeMinAssignment_0()); }
(rule__Age__AgeMinAssignment_0)
{ after(grammarAccess.getAgeAccess().getAgeMinAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Age__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Age__Group__1__Impl
	rule__Age__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Age__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgeAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getAgeAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Age__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Age__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Age__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgeAccess().getAgeMaxAssignment_2()); }
(rule__Age__AgeMaxAssignment_2)
{ after(grammarAccess.getAgeAccess().getAgeMaxAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PlayerDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlayerDescription__Group__0__Impl
	rule__PlayerDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlayerDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerDescriptionAccess().getPlayerKeyword_0()); }

	'Player' 

{ after(grammarAccess.getPlayerDescriptionAccess().getPlayerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlayerDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlayerDescription__Group__1__Impl
	rule__PlayerDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlayerDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPlayerDescriptionAccess().getCharacteristicsAssignment_1()); }
(rule__PlayerDescription__CharacteristicsAssignment_1)
{ after(grammarAccess.getPlayerDescriptionAccess().getCharacteristicsAssignment_1()); }
)
(
{ before(grammarAccess.getPlayerDescriptionAccess().getCharacteristicsAssignment_1()); }
(rule__PlayerDescription__CharacteristicsAssignment_1)*
{ after(grammarAccess.getPlayerDescriptionAccess().getCharacteristicsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlayerDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlayerDescription__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlayerDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerDescriptionAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getPlayerDescriptionAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Characteristic__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Characteristic__Group__0__Impl
	rule__Characteristic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacteristicAccess().getNameAssignment_0()); }
(rule__Characteristic__NameAssignment_0)
{ after(grammarAccess.getCharacteristicAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Characteristic__Group__1__Impl
	rule__Characteristic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacteristicAccess().getSeparatorParserRuleCall_1()); }
	ruleSeparator
{ after(grammarAccess.getCharacteristicAccess().getSeparatorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Characteristic__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Characteristic__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacteristicAccess().getTypeAssignment_2()); }
(rule__Characteristic__TypeAssignment_2)
{ after(grammarAccess.getCharacteristicAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LearningOutcomes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LearningOutcomes__Group__0__Impl
	rule__LearningOutcomes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningOutcomes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLearningOutcomesAccess().getLearningOutcomesKeyword_0()); }

	'Learning-outcomes' 

{ after(grammarAccess.getLearningOutcomesAccess().getLearningOutcomesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LearningOutcomes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LearningOutcomes__Group__1__Impl
	rule__LearningOutcomes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningOutcomes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLearningOutcomesAccess().getOutcomesAssignment_1()); }
(rule__LearningOutcomes__OutcomesAssignment_1)
{ after(grammarAccess.getLearningOutcomesAccess().getOutcomesAssignment_1()); }
)
(
{ before(grammarAccess.getLearningOutcomesAccess().getOutcomesAssignment_1()); }
(rule__LearningOutcomes__OutcomesAssignment_1)*
{ after(grammarAccess.getLearningOutcomesAccess().getOutcomesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LearningOutcomes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LearningOutcomes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LearningOutcomes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLearningOutcomesAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getLearningOutcomesAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Outcome__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Outcome__Group__0__Impl
	rule__Outcome__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getNameAssignment_0()); }
(rule__Outcome__NameAssignment_0)
{ after(grammarAccess.getOutcomeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Outcome__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Outcome__Group__1__Impl
	rule__Outcome__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getDescAssignment_1()); }
(rule__Outcome__DescAssignment_1)?
{ after(grammarAccess.getOutcomeAccess().getDescAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Outcome__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Outcome__Group__2__Impl
	rule__Outcome__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getValueAssignment_2()); }
(rule__Outcome__ValueAssignment_2)?
{ after(grammarAccess.getOutcomeAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Outcome__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Outcome__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getTypeAssignment_3()); }
(rule__Outcome__TypeAssignment_3)?
{ after(grammarAccess.getOutcomeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeedbackMessages__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackMessages__Group__0__Impl
	rule__FeedbackMessages__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackMessages__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackMessagesAccess().getFeedbackMessagesKeyword_0()); }

	'Feedback-messages' 

{ after(grammarAccess.getFeedbackMessagesAccess().getFeedbackMessagesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackMessages__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackMessages__Group__1__Impl
	rule__FeedbackMessages__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackMessages__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFeedbackMessagesAccess().getFeedbackMsgsAssignment_1()); }
(rule__FeedbackMessages__FeedbackMsgsAssignment_1)
{ after(grammarAccess.getFeedbackMessagesAccess().getFeedbackMsgsAssignment_1()); }
)
(
{ before(grammarAccess.getFeedbackMessagesAccess().getFeedbackMsgsAssignment_1()); }
(rule__FeedbackMessages__FeedbackMsgsAssignment_1)*
{ after(grammarAccess.getFeedbackMessagesAccess().getFeedbackMsgsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackMessages__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackMessages__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackMessages__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackMessagesAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getFeedbackMessagesAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Feedback__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feedback__Group__0__Impl
	rule__Feedback__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getNameAssignment_0()); }
(rule__Feedback__NameAssignment_0)
{ after(grammarAccess.getFeedbackAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feedback__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feedback__Group__1__Impl
	rule__Feedback__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getMessageAssignment_1()); }
(rule__Feedback__MessageAssignment_1)
{ after(grammarAccess.getFeedbackAccess().getMessageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feedback__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feedback__Group__2__Impl
	rule__Feedback__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getTypeAssignment_2()); }
(rule__Feedback__TypeAssignment_2)?
{ after(grammarAccess.getFeedbackAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feedback__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feedback__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getFinalAssignment_3()); }
(rule__Feedback__FinalAssignment_3)?
{ after(grammarAccess.getFeedbackAccess().getFinalAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EvidenceModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EvidenceModel__Group__0__Impl
	rule__EvidenceModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getEvidenceModelKeyword_0()); }

	'Evidence-model' 

{ after(grammarAccess.getEvidenceModelAccess().getEvidenceModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EvidenceModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EvidenceModel__Group__1__Impl
	rule__EvidenceModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEvidenceModelAccess().getActionsAssignment_1()); }
(rule__EvidenceModel__ActionsAssignment_1)
{ after(grammarAccess.getEvidenceModelAccess().getActionsAssignment_1()); }
)
(
{ before(grammarAccess.getEvidenceModelAccess().getActionsAssignment_1()); }
(rule__EvidenceModel__ActionsAssignment_1)*
{ after(grammarAccess.getEvidenceModelAccess().getActionsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EvidenceModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EvidenceModel__Group__2__Impl
	rule__EvidenceModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getTimerActionsAssignment_2()); }
(rule__EvidenceModel__TimerActionsAssignment_2)?
{ after(grammarAccess.getEvidenceModelAccess().getTimerActionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EvidenceModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EvidenceModel__Group__3__Impl
	rule__EvidenceModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getActionSequenceAssignment_3()); }
(rule__EvidenceModel__ActionSequenceAssignment_3)?
{ after(grammarAccess.getEvidenceModelAccess().getActionSequenceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EvidenceModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EvidenceModel__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getEndParserRuleCall_4()); }
	ruleEnd
{ after(grammarAccess.getEvidenceModelAccess().getEndParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActionSequences__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequences__Group__0__Impl
	rule__ActionSequences__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequences__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequencesAccess().getActionSequenceKeyword_0()); }

	'Action-sequence' 

{ after(grammarAccess.getActionSequencesAccess().getActionSequenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequences__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequences__Group__1__Impl
	rule__ActionSequences__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequences__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequencesAccess().getActionSequencesAssignment_1()); }
(rule__ActionSequences__ActionSequencesAssignment_1)
{ after(grammarAccess.getActionSequencesAccess().getActionSequencesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequences__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequences__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequences__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequencesAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getActionSequencesAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActionSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequence__Group__0__Impl
	rule__ActionSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getAction1Assignment_0()); }
(rule__ActionSequence__Action1Assignment_0)
{ after(grammarAccess.getActionSequenceAccess().getAction1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequence__Group__1__Impl
	rule__ActionSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getAlternatives_1()); }
(rule__ActionSequence__Alternatives_1)
{ after(grammarAccess.getActionSequenceAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequence__Group__2__Impl
	rule__ActionSequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getAction2Assignment_2()); }
(rule__ActionSequence__Action2Assignment_2)
{ after(grammarAccess.getActionSequenceAccess().getAction2Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequence__Group__3__Impl
	rule__ActionSequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getElseKeyword_3()); }

	'else' 

{ after(grammarAccess.getActionSequenceAccess().getElseKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequence__Group__4__Impl
	rule__ActionSequence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getActionSequenceAccess().getSequenceReactionsAssignment_4()); }
(rule__ActionSequence__SequenceReactionsAssignment_4)
{ after(grammarAccess.getActionSequenceAccess().getSequenceReactionsAssignment_4()); }
)
(
{ before(grammarAccess.getActionSequenceAccess().getSequenceReactionsAssignment_4()); }
(rule__ActionSequence__SequenceReactionsAssignment_4)*
{ after(grammarAccess.getActionSequenceAccess().getSequenceReactionsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSequence__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionSequence__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getEndParserRuleCall_5()); }
	ruleEnd
{ after(grammarAccess.getActionSequenceAccess().getEndParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TimerActions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerActions__Group__0__Impl
	rule__TimerActions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerActions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionsAccess().getTimerActionsKeyword_0()); }

	'Timer-actions' 

{ after(grammarAccess.getTimerActionsAccess().getTimerActionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerActions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerActions__Group__1__Impl
	rule__TimerActions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerActions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTimerActionsAccess().getTimerActionsAssignment_1()); }
(rule__TimerActions__TimerActionsAssignment_1)
{ after(grammarAccess.getTimerActionsAccess().getTimerActionsAssignment_1()); }
)
(
{ before(grammarAccess.getTimerActionsAccess().getTimerActionsAssignment_1()); }
(rule__TimerActions__TimerActionsAssignment_1)*
{ after(grammarAccess.getTimerActionsAccess().getTimerActionsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerActions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerActions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerActions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionsAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getTimerActionsAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimerAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerAction__Group__0__Impl
	rule__TimerAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionAccess().getNameAssignment_0()); }
(rule__TimerAction__NameAssignment_0)
{ after(grammarAccess.getTimerActionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerAction__Group__1__Impl
	rule__TimerAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTimerActionAccess().getTimingsAssignment_1()); }
(rule__TimerAction__TimingsAssignment_1)
{ after(grammarAccess.getTimerActionAccess().getTimingsAssignment_1()); }
)
(
{ before(grammarAccess.getTimerActionAccess().getTimingsAssignment_1()); }
(rule__TimerAction__TimingsAssignment_1)*
{ after(grammarAccess.getTimerActionAccess().getTimingsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getTimerActionAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Timing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timing__Group__0__Impl
	rule__Timing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getAlternatives_0()); }
(rule__Timing__Alternatives_0)
{ after(grammarAccess.getTimingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Timing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timing__Group__1__Impl
	rule__Timing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getLimitAssignment_1()); }
(rule__Timing__LimitAssignment_1)
{ after(grammarAccess.getTimingAccess().getLimitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Timing__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timing__Group__2__Impl
	rule__Timing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getSecKeyword_2()); }

	'sec' 

{ after(grammarAccess.getTimingAccess().getSecKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Timing__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timing__Group__3__Impl
	rule__Timing__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTimingAccess().getTimingReactionsAssignment_3()); }
(rule__Timing__TimingReactionsAssignment_3)
{ after(grammarAccess.getTimingAccess().getTimingReactionsAssignment_3()); }
)
(
{ before(grammarAccess.getTimingAccess().getTimingReactionsAssignment_3()); }
(rule__Timing__TimingReactionsAssignment_3)*
{ after(grammarAccess.getTimingAccess().getTimingReactionsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Timing__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timing__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getEndParserRuleCall_4()); }
	ruleEnd
{ after(grammarAccess.getTimingAccess().getEndParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UpdateScore__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateScore__Group__0__Impl
	rule__UpdateScore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateScore__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateScoreAccess().getOutcomeAssignment_0()); }
(rule__UpdateScore__OutcomeAssignment_0)
{ after(grammarAccess.getUpdateScoreAccess().getOutcomeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateScore__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateScore__Group__1__Impl
	rule__UpdateScore__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateScore__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateScoreAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getUpdateScoreAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateScore__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateScore__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateScore__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateScoreAccess().getPtsAssignment_2()); }
(rule__UpdateScore__PtsAssignment_2)
{ after(grammarAccess.getUpdateScoreAccess().getPtsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TriggerFeedback__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerFeedback__Group__0__Impl
	rule__TriggerFeedback__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerFeedback__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerFeedbackAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getTriggerFeedbackAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerFeedback__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerFeedback__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerFeedback__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerFeedbackAccess().getFeedbackAssignment_1()); }
(rule__TriggerFeedback__FeedbackAssignment_1)
{ after(grammarAccess.getTriggerFeedbackAccess().getFeedbackAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_0()); }
(rule__Action__NameAssignment_0)
{ after(grammarAccess.getActionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParamsAssignment_2()); }
(rule__Action__ParamsAssignment_2)
{ after(grammarAccess.getActionAccess().getParamsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_3()); }
(rule__Action__Group_3__0)*
{ after(grammarAccess.getActionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__4__Impl
	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__5__Impl
	rule__Action__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getActionAccess().getPointsAssignment_5()); }
(rule__Action__PointsAssignment_5)
{ after(grammarAccess.getActionAccess().getPointsAssignment_5()); }
)
(
{ before(grammarAccess.getActionAccess().getPointsAssignment_5()); }
(rule__Action__PointsAssignment_5)*
{ after(grammarAccess.getActionAccess().getPointsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__6__Impl
	rule__Action__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getReactionsAssignment_6()); }
(rule__Action__ReactionsAssignment_6)?
{ after(grammarAccess.getActionAccess().getReactionsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getEndParserRuleCall_7()); }
	ruleEnd
{ after(grammarAccess.getActionAccess().getEndParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Action__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_3__0__Impl
	rule__Action__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getActionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParamsAssignment_3_1()); }
(rule__Action__ParamsAssignment_3_1)
{ after(grammarAccess.getActionAccess().getParamsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLogOnlyAssignment_0()); }
(rule__Parameter__LogOnlyAssignment_0)?
{ after(grammarAccess.getParameterAccess().getLogOnlyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
(rule__Parameter__TypeAssignment_1)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_2()); }
(rule__Parameter__NameAssignment_2)
{ after(grammarAccess.getParameterAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Points__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__0__Impl
	rule__Points__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getGroup_0()); }
(rule__Points__Group_0__0)?
{ after(grammarAccess.getPointsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__1__Impl
	rule__Points__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getResetValueAssignment_1()); }
(rule__Points__ResetValueAssignment_1)?
{ after(grammarAccess.getPointsAccess().getResetValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__2__Impl
	rule__Points__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getPtsAssignment_2()); }
(rule__Points__PtsAssignment_2)
{ after(grammarAccess.getPointsAccess().getPtsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__3__Impl
	rule__Points__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getAlternatives_3()); }
(rule__Points__Alternatives_3)
{ after(grammarAccess.getPointsAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getEndParserRuleCall_4()); }
	ruleEnd
{ after(grammarAccess.getPointsAccess().getEndParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Points__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group_0__0__Impl
	rule__Points__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getOutcomeAssignment_0_0()); }
(rule__Points__OutcomeAssignment_0_0)
{ after(grammarAccess.getPointsAccess().getOutcomeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Points__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Points__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Points__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }

	'->' 

{ after(grammarAccess.getPointsAccess().getHyphenMinusGreaterThanSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Point__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getNegativeAssignment_0()); }
(rule__Point__NegativeAssignment_0)?
{ after(grammarAccess.getPointAccess().getNegativeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Point__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getValueAssignment_1()); }
(rule__Point__ValueAssignment_1)
{ after(grammarAccess.getPointAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Params__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group__0__Impl
	rule__Params__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getGroup_0()); }
(rule__Params__Group_0__0)?
{ after(grammarAccess.getParamsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group__1__Impl
	rule__Params__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getValuesAssignment_1()); }
(rule__Params__ValuesAssignment_1)
{ after(grammarAccess.getParamsAccess().getValuesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group__2__Impl
	rule__Params__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getGroup_2()); }
(rule__Params__Group_2__0)*
{ after(grammarAccess.getParamsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getDelimitatorParserRuleCall_3()); }
	ruleDelimitator
{ after(grammarAccess.getParamsAccess().getDelimitatorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Params__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group_0__0__Impl
	rule__Params__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getNameAssignment_0_0()); }
(rule__Params__NameAssignment_0_0)
{ after(grammarAccess.getParamsAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getParamsAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Params__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group_2__0__Impl
	rule__Params__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getParamsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Params__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getValuesAssignment_2_1()); }
(rule__Params__ValuesAssignment_2_1)
{ after(grammarAccess.getParamsAccess().getValuesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FLOAT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__0__Impl
	rule__FLOAT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getGroup_1()); }
(rule__FLOAT__Group_1__0)
{ after(grammarAccess.getFLOATAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FLOAT__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group_1__0__Impl
	rule__FLOAT__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFLOATAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getFLOATAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reactions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reactions__Group__0__Impl
	rule__Reactions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionsAccess().getWhenKeyword_0()); }

	'When' 

{ after(grammarAccess.getReactionsAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reactions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reactions__Group__1__Impl
	rule__Reactions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getReactionsAccess().getReactionAssignment_1()); }
(rule__Reactions__ReactionAssignment_1)
{ after(grammarAccess.getReactionsAccess().getReactionAssignment_1()); }
)
(
{ before(grammarAccess.getReactionsAccess().getReactionAssignment_1()); }
(rule__Reactions__ReactionAssignment_1)*
{ after(grammarAccess.getReactionsAccess().getReactionAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reactions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reactions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reactions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionsAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getReactionsAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Reaction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reaction__Group_1__0__Impl
	rule__Reaction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getPointsCAssignment_1_0()); }
(rule__Reaction__PointsCAssignment_1_0)
{ after(grammarAccess.getReactionAccess().getPointsCAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reaction__Group_1__1__Impl
	rule__Reaction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getReactionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reaction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getFeedbackAssignment_1_2()); }
(rule__Reaction__FeedbackAssignment_1_2)
{ after(grammarAccess.getReactionAccess().getFeedbackAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PointsCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointsCondition__Group__0__Impl
	rule__PointsCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getKeyWdAssignment_0()); }
(rule__PointsCondition__KeyWdAssignment_0)
{ after(grammarAccess.getPointsConditionAccess().getKeyWdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointsCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointsCondition__Group__1__Impl
	rule__PointsCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getPointsConditionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointsCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointsCondition__Group__2__Impl
	rule__PointsCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getAlternatives_2()); }
(rule__PointsCondition__Alternatives_2)
{ after(grammarAccess.getPointsConditionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PointsCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PointsCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getPointsConditionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeedbackModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackModel__Group__0__Impl
	rule__FeedbackModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackModelAccess().getFeedbackModelKeyword_0()); }

	'Feedback-model' 

{ after(grammarAccess.getFeedbackModelAccess().getFeedbackModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackModel__Group__1__Impl
	rule__FeedbackModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFeedbackModelAccess().getTriggersAssignment_1()); }
(rule__FeedbackModel__TriggersAssignment_1)
{ after(grammarAccess.getFeedbackModelAccess().getTriggersAssignment_1()); }
)
(
{ before(grammarAccess.getFeedbackModelAccess().getTriggersAssignment_1()); }
(rule__FeedbackModel__TriggersAssignment_1)*
{ after(grammarAccess.getFeedbackModelAccess().getTriggersAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackModelAccess().getEndParserRuleCall_2()); }
	ruleEnd
{ after(grammarAccess.getFeedbackModelAccess().getEndParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OutcomeValueLimit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutcomeValueLimit__Group__0__Impl
	rule__OutcomeValueLimit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getOutcomeAssignment_0()); }
(rule__OutcomeValueLimit__OutcomeAssignment_0)
{ after(grammarAccess.getOutcomeValueLimitAccess().getOutcomeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutcomeValueLimit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutcomeValueLimit__Group__1__Impl
	rule__OutcomeValueLimit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getSignAssignment_1()); }
(rule__OutcomeValueLimit__SignAssignment_1)
{ after(grammarAccess.getOutcomeValueLimitAccess().getSignAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutcomeValueLimit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutcomeValueLimit__Group__2__Impl
	rule__OutcomeValueLimit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getNegativeLimitAssignment_2()); }
(rule__OutcomeValueLimit__NegativeLimitAssignment_2)?
{ after(grammarAccess.getOutcomeValueLimitAccess().getNegativeLimitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutcomeValueLimit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutcomeValueLimit__Group__3__Impl
	rule__OutcomeValueLimit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getLimitAssignment_3()); }
(rule__OutcomeValueLimit__LimitAssignment_3)
{ after(grammarAccess.getOutcomeValueLimitAccess().getLimitAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutcomeValueLimit__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutcomeValueLimit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getTriggerReactionsAssignment_4()); }
(rule__OutcomeValueLimit__TriggerReactionsAssignment_4)
{ after(grammarAccess.getOutcomeValueLimitAccess().getTriggerReactionsAssignment_4()); }
)
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getTriggerReactionsAssignment_4()); }
(rule__OutcomeValueLimit__TriggerReactionsAssignment_4)*
{ after(grammarAccess.getOutcomeValueLimitAccess().getTriggerReactionsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InactivityLimit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InactivityLimit__Group__0__Impl
	rule__InactivityLimit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getInactivityKeyword_0()); }

	'inactivity' 

{ after(grammarAccess.getInactivityLimitAccess().getInactivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InactivityLimit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InactivityLimit__Group__1__Impl
	rule__InactivityLimit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getSignAssignment_1()); }
(rule__InactivityLimit__SignAssignment_1)
{ after(grammarAccess.getInactivityLimitAccess().getSignAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InactivityLimit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InactivityLimit__Group__2__Impl
	rule__InactivityLimit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getLimitAssignment_2()); }
(rule__InactivityLimit__LimitAssignment_2)
{ after(grammarAccess.getInactivityLimitAccess().getLimitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InactivityLimit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InactivityLimit__Group__3__Impl
	rule__InactivityLimit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getSecKeyword_3()); }

	'sec' 

{ after(grammarAccess.getInactivityLimitAccess().getSecKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InactivityLimit__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InactivityLimit__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInactivityLimitAccess().getTriggerReactionsAssignment_4()); }
(rule__InactivityLimit__TriggerReactionsAssignment_4)
{ after(grammarAccess.getInactivityLimitAccess().getTriggerReactionsAssignment_4()); }
)
(
{ before(grammarAccess.getInactivityLimitAccess().getTriggerReactionsAssignment_4()); }
(rule__InactivityLimit__TriggerReactionsAssignment_4)*
{ after(grammarAccess.getInactivityLimitAccess().getTriggerReactionsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Model__GameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGameGameDescriptionParserRuleCall_0_0()); }
	ruleGameDescription{ after(grammarAccess.getModelAccess().getGameGameDescriptionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PlayerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlayerPlayerDescriptionParserRuleCall_1_0()); }
	rulePlayerDescription{ after(grammarAccess.getModelAccess().getPlayerPlayerDescriptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LearningOutcomesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLearningOutcomesLearningOutcomesParserRuleCall_2_0()); }
	ruleLearningOutcomes{ after(grammarAccess.getModelAccess().getLearningOutcomesLearningOutcomesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FeedbackMessagesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFeedbackMessagesFeedbackMessagesParserRuleCall_3_0()); }
	ruleFeedbackMessages{ after(grammarAccess.getModelAccess().getFeedbackMessagesFeedbackMessagesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EvidenceModelAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getEvidenceModelEvidenceModelParserRuleCall_4_0()); }
	ruleEvidenceModel{ after(grammarAccess.getModelAccess().getEvidenceModelEvidenceModelParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FeedbackModelAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getFeedbackModelFeedbackModelParserRuleCall_5_0()); }
	ruleFeedbackModel{ after(grammarAccess.getModelAccess().getFeedbackModelFeedbackModelParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpleTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpleTypeAlternatives_0_0()); }
(rule__Type__SimpleTypeAlternatives_0_0)
{ after(grammarAccess.getTypeAccess().getSimpleTypeAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EnumTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEnumTypeEnumParserRuleCall_1_0()); }
	ruleEnum{ after(grammarAccess.getTypeAccess().getEnumTypeEnumParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumValuesSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getEnumAccess().getEnumValuesSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumValuesSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getEnumAccess().getEnumValuesSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getGameDescriptionAccess().getNameSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__DevAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getDevINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getGameDescriptionAccess().getDevINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__DescAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getDescSTRINGTerminalRuleCall_7_2_0()); }
	RULE_STRING{ after(grammarAccess.getGameDescriptionAccess().getDescSTRINGTerminalRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__AgeRangeAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getAgeRangeAgeParserRuleCall_8_2_0()); }
	ruleAge{ after(grammarAccess.getGameDescriptionAccess().getAgeRangeAgeParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__LangAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getLangIDTerminalRuleCall_9_2_0()); }
	RULE_ID{ after(grammarAccess.getGameDescriptionAccess().getLangIDTerminalRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__CountryAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getCountryIDTerminalRuleCall_10_2_0()); }
	RULE_ID{ after(grammarAccess.getGameDescriptionAccess().getCountryIDTerminalRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__GenreAssignment_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getGenreSTRINGTerminalRuleCall_11_2_0()); }
	RULE_STRING{ after(grammarAccess.getGameDescriptionAccess().getGenreSTRINGTerminalRuleCall_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__SubjectAssignment_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getSubjectSTRINGTerminalRuleCall_12_2_0()); }
	RULE_STRING{ after(grammarAccess.getGameDescriptionAccess().getSubjectSTRINGTerminalRuleCall_12_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GameDescription__PublicAssignment_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameDescriptionAccess().getPublicBOOLParserRuleCall_13_2_0()); }
	ruleBOOL{ after(grammarAccess.getGameDescriptionAccess().getPublicBOOLParserRuleCall_13_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Age__AgeMinAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgeAccess().getAgeMinINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getAgeAccess().getAgeMinINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Age__AgeMaxAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAgeAccess().getAgeMaxINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getAgeAccess().getAgeMaxINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlayerDescription__CharacteristicsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerDescriptionAccess().getCharacteristicsCharacteristicParserRuleCall_1_0()); }
	ruleCharacteristic{ after(grammarAccess.getPlayerDescriptionAccess().getCharacteristicsCharacteristicParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacteristicAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getCharacteristicAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Characteristic__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharacteristicAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getCharacteristicAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LearningOutcomes__OutcomesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLearningOutcomesAccess().getOutcomesOutcomeParserRuleCall_1_0()); }
	ruleOutcome{ after(grammarAccess.getLearningOutcomesAccess().getOutcomesOutcomeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getOutcomeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__DescAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getDescSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getOutcomeAccess().getDescSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getOutcomeAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Outcome__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeAccess().getTypeTypeOutcomeParserRuleCall_3_0()); }
	ruleTypeOutcome{ after(grammarAccess.getOutcomeAccess().getTypeTypeOutcomeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOutcome__KnowledgeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeOutcomeAccess().getKnowledgeKnowledgeKeyword_0_0()); }
(
{ before(grammarAccess.getTypeOutcomeAccess().getKnowledgeKnowledgeKeyword_0_0()); }

	'knowledge' 

{ after(grammarAccess.getTypeOutcomeAccess().getKnowledgeKnowledgeKeyword_0_0()); }
)

{ after(grammarAccess.getTypeOutcomeAccess().getKnowledgeKnowledgeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOutcome__SkillAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeOutcomeAccess().getSkillSkillKeyword_1_0()); }
(
{ before(grammarAccess.getTypeOutcomeAccess().getSkillSkillKeyword_1_0()); }

	'skill' 

{ after(grammarAccess.getTypeOutcomeAccess().getSkillSkillKeyword_1_0()); }
)

{ after(grammarAccess.getTypeOutcomeAccess().getSkillSkillKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOutcome__CompetenceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeOutcomeAccess().getCompetenceCompetenceKeyword_2_0()); }
(
{ before(grammarAccess.getTypeOutcomeAccess().getCompetenceCompetenceKeyword_2_0()); }

	'competence' 

{ after(grammarAccess.getTypeOutcomeAccess().getCompetenceCompetenceKeyword_2_0()); }
)

{ after(grammarAccess.getTypeOutcomeAccess().getCompetenceCompetenceKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackMessages__FeedbackMsgsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackMessagesAccess().getFeedbackMsgsFeedbackParserRuleCall_1_0()); }
	ruleFeedback{ after(grammarAccess.getFeedbackMessagesAccess().getFeedbackMsgsFeedbackParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFeedbackAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__MessageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getMessageSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getFeedbackAccess().getMessageSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getTypeTypeFeedbackParserRuleCall_2_0()); }
	ruleTypeFeedback{ after(grammarAccess.getFeedbackAccess().getTypeTypeFeedbackParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feedback__FinalAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackAccess().getFinalFinalKeyword_3_0()); }
(
{ before(grammarAccess.getFeedbackAccess().getFinalFinalKeyword_3_0()); }

	'final' 

{ after(grammarAccess.getFeedbackAccess().getFinalFinalKeyword_3_0()); }
)

{ after(grammarAccess.getFeedbackAccess().getFinalFinalKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__ActionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getActionsActionParserRuleCall_1_0()); }
	ruleAction{ after(grammarAccess.getEvidenceModelAccess().getActionsActionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__TimerActionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getTimerActionsTimerActionsParserRuleCall_2_0()); }
	ruleTimerActions{ after(grammarAccess.getEvidenceModelAccess().getTimerActionsTimerActionsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EvidenceModel__ActionSequenceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEvidenceModelAccess().getActionSequenceActionSequencesParserRuleCall_3_0()); }
	ruleActionSequences{ after(grammarAccess.getEvidenceModelAccess().getActionSequenceActionSequencesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequences__ActionSequencesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequencesAccess().getActionSequencesActionSequenceParserRuleCall_1_0()); }
	ruleActionSequence{ after(grammarAccess.getActionSequencesAccess().getActionSequencesActionSequenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Action1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getAction1IDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActionSequenceAccess().getAction1IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__BeforeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getBeforeBeforeKeyword_1_0_0()); }
(
{ before(grammarAccess.getActionSequenceAccess().getBeforeBeforeKeyword_1_0_0()); }

	'before' 

{ after(grammarAccess.getActionSequenceAccess().getBeforeBeforeKeyword_1_0_0()); }
)

{ after(grammarAccess.getActionSequenceAccess().getBeforeBeforeKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__AfterAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getAfterAfterKeyword_1_1_0()); }
(
{ before(grammarAccess.getActionSequenceAccess().getAfterAfterKeyword_1_1_0()); }

	'after' 

{ after(grammarAccess.getActionSequenceAccess().getAfterAfterKeyword_1_1_0()); }
)

{ after(grammarAccess.getActionSequenceAccess().getAfterAfterKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__Action2Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getAction2IDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getActionSequenceAccess().getAction2IDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSequence__SequenceReactionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionSequenceAccess().getSequenceReactionsActionReactionParserRuleCall_4_0()); }
	ruleActionReaction{ after(grammarAccess.getActionSequenceAccess().getSequenceReactionsActionReactionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimerActions__TimerActionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionsAccess().getTimerActionsTimerActionParserRuleCall_1_0()); }
	ruleTimerAction{ after(grammarAccess.getTimerActionsAccess().getTimerActionsTimerActionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimerAction__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTimerActionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimerAction__TimingsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerActionAccess().getTimingsTimingParserRuleCall_1_0()); }
	ruleTiming{ after(grammarAccess.getTimerActionAccess().getTimingsTimingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__BeforeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getBeforeWithinKeyword_0_0_0()); }
(
{ before(grammarAccess.getTimingAccess().getBeforeWithinKeyword_0_0_0()); }

	'within' 

{ after(grammarAccess.getTimingAccess().getBeforeWithinKeyword_0_0_0()); }
)

{ after(grammarAccess.getTimingAccess().getBeforeWithinKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__AfterAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getAfterAfterKeyword_0_1_0()); }
(
{ before(grammarAccess.getTimingAccess().getAfterAfterKeyword_0_1_0()); }

	'after' 

{ after(grammarAccess.getTimingAccess().getAfterAfterKeyword_0_1_0()); }
)

{ after(grammarAccess.getTimingAccess().getAfterAfterKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__LimitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getLimitINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getTimingAccess().getLimitINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timing__TimingReactionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimingAccess().getTimingReactionsActionReactionParserRuleCall_3_0()); }
	ruleActionReaction{ after(grammarAccess.getTimingAccess().getTimingReactionsActionReactionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionReaction__UpdateScoreAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionReactionAccess().getUpdateScoreUpdateScoreParserRuleCall_0_0()); }
	ruleUpdateScore{ after(grammarAccess.getActionReactionAccess().getUpdateScoreUpdateScoreParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionReaction__TriggerFeedbackAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionReactionAccess().getTriggerFeedbackTriggerFeedbackParserRuleCall_1_0()); }
	ruleTriggerFeedback{ after(grammarAccess.getActionReactionAccess().getTriggerFeedbackTriggerFeedbackParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateScore__OutcomeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateScoreAccess().getOutcomeOutcomeCrossReference_0_0()); }
(
{ before(grammarAccess.getUpdateScoreAccess().getOutcomeOutcomeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getUpdateScoreAccess().getOutcomeOutcomeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getUpdateScoreAccess().getOutcomeOutcomeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateScore__PtsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateScoreAccess().getPtsPointParserRuleCall_2_0()); }
	rulePoint{ after(grammarAccess.getUpdateScoreAccess().getPtsPointParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerFeedback__FeedbackAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerFeedbackAccess().getFeedbackFeedbackCrossReference_1_0()); }
(
{ before(grammarAccess.getTriggerFeedbackAccess().getFeedbackFeedbackIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTriggerFeedbackAccess().getFeedbackFeedbackIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTriggerFeedbackAccess().getFeedbackFeedbackCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParamsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParamsParameterParserRuleCall_2_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParamsParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParamsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParamsParameterParserRuleCall_3_1_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParamsParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__PointsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getPointsPointsParserRuleCall_5_0()); }
	rulePoints{ after(grammarAccess.getActionAccess().getPointsPointsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ReactionsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getReactionsReactionsParserRuleCall_6_0()); }
	ruleReactions{ after(grammarAccess.getActionAccess().getReactionsReactionsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__LogOnlyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLogOnlyLogOnlyKeyword_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getLogOnlyLogOnlyKeyword_0_0()); }

	'LogOnly' 

{ after(grammarAccess.getParameterAccess().getLogOnlyLogOnlyKeyword_0_0()); }
)

{ after(grammarAccess.getParameterAccess().getLogOnlyLogOnlyKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__OutcomeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getOutcomeOutcomeCrossReference_0_0_0()); }
(
{ before(grammarAccess.getPointsAccess().getOutcomeOutcomeIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPointsAccess().getOutcomeOutcomeIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getPointsAccess().getOutcomeOutcomeCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__ResetValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getResetValueEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getPointsAccess().getResetValueEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getPointsAccess().getResetValueEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getPointsAccess().getResetValueEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__PtsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getPtsPointParserRuleCall_2_0()); }
	rulePoint{ after(grammarAccess.getPointsAccess().getPtsPointParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__OthersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getOthersAlternatives_3_0_0()); }
(rule__Points__OthersAlternatives_3_0_0)
{ after(grammarAccess.getPointsAccess().getOthersAlternatives_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Points__ParamsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsAccess().getParamsParamsParserRuleCall_3_1_0()); }
	ruleParams{ after(grammarAccess.getPointsAccess().getParamsParamsParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__NegativeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getNegativeHyphenMinusKeyword_0_0()); }
(
{ before(grammarAccess.getPointAccess().getNegativeHyphenMinusKeyword_0_0()); }

	'-' 

{ after(grammarAccess.getPointAccess().getNegativeHyphenMinusKeyword_0_0()); }
)

{ after(grammarAccess.getPointAccess().getNegativeHyphenMinusKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Point__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPointAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Params__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getParamsAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Params__ValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getValuesParamParserRuleCall_1_0()); }
	ruleParam{ after(grammarAccess.getParamsAccess().getValuesParamParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Params__ValuesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamsAccess().getValuesParamParserRuleCall_2_1_0()); }
	ruleParam{ after(grammarAccess.getParamsAccess().getValuesParamParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reactions__ReactionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionsAccess().getReactionReactionParserRuleCall_1_0()); }
	ruleReaction{ after(grammarAccess.getReactionsAccess().getReactionReactionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__ParamsCAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getParamsCParamConditionParserRuleCall_0_0()); }
	ruleParamCondition{ after(grammarAccess.getReactionAccess().getParamsCParamConditionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__PointsCAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getPointsCPointsConditionParserRuleCall_1_0_0()); }
	rulePointsCondition{ after(grammarAccess.getReactionAccess().getPointsCPointsConditionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__FeedbackAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReactionAccess().getFeedbackFeedbackCrossReference_1_2_0()); }
(
{ before(grammarAccess.getReactionAccess().getFeedbackFeedbackIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getReactionAccess().getFeedbackFeedbackIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getReactionAccess().getFeedbackFeedbackCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamCondition__ParamsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamConditionAccess().getParamsParamsCrossReference_0()); }
(
{ before(grammarAccess.getParamConditionAccess().getParamsParamsIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getParamConditionAccess().getParamsParamsIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getParamConditionAccess().getParamsParamsCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__KeyWdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getKeyWdPointsKeyWdParserRuleCall_0_0()); }
	rulePointsKeyWd{ after(grammarAccess.getPointsConditionAccess().getKeyWdPointsKeyWdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__SignAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getSignSignParserRuleCall_2_0_0()); }
	ruleSign{ after(grammarAccess.getPointsConditionAccess().getSignSignParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PointsCondition__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointsConditionAccess().getValuePointParserRuleCall_2_1_0()); }
	rulePoint{ after(grammarAccess.getPointsConditionAccess().getValuePointParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackModel__TriggersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackModelAccess().getTriggersTriggerParserRuleCall_1_0()); }
	ruleTrigger{ after(grammarAccess.getFeedbackModelAccess().getTriggersTriggerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__PerfAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getPerfOutcomeValueLimitParserRuleCall_0_0()); }
	ruleOutcomeValueLimit{ after(grammarAccess.getTriggerAccess().getPerfOutcomeValueLimitParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__InactivityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getInactivityInactivityLimitParserRuleCall_1_0()); }
	ruleInactivityLimit{ after(grammarAccess.getTriggerAccess().getInactivityInactivityLimitParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__OutcomeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getOutcomeOutcomeCrossReference_0_0()); }
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getOutcomeOutcomeIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOutcomeValueLimitAccess().getOutcomeOutcomeIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOutcomeValueLimitAccess().getOutcomeOutcomeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__SignAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getSignCompSignParserRuleCall_1_0()); }
	ruleCompSign{ after(grammarAccess.getOutcomeValueLimitAccess().getSignCompSignParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__NegativeLimitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getNegativeLimitHyphenMinusKeyword_2_0()); }
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getNegativeLimitHyphenMinusKeyword_2_0()); }

	'-' 

{ after(grammarAccess.getOutcomeValueLimitAccess().getNegativeLimitHyphenMinusKeyword_2_0()); }
)

{ after(grammarAccess.getOutcomeValueLimitAccess().getNegativeLimitHyphenMinusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__LimitAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getLimitINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getOutcomeValueLimitAccess().getLimitINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutcomeValueLimit__TriggerReactionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutcomeValueLimitAccess().getTriggerReactionsTriggerFeedbackParserRuleCall_4_0()); }
	ruleTriggerFeedback{ after(grammarAccess.getOutcomeValueLimitAccess().getTriggerReactionsTriggerFeedbackParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__SignAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getSignCompSignParserRuleCall_1_0()); }
	ruleCompSign{ after(grammarAccess.getInactivityLimitAccess().getSignCompSignParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__LimitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getLimitINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getInactivityLimitAccess().getLimitINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InactivityLimit__TriggerReactionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInactivityLimitAccess().getTriggerReactionsActionReactionParserRuleCall_4_0()); }
	ruleActionReaction{ after(grammarAccess.getInactivityLimitAccess().getTriggerReactionsActionReactionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


